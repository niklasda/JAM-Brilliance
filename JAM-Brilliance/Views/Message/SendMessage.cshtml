@using JAM.Core.Logic
@using JAM.Brilliance.Models.ViewModels
@model SendMessageViewModel

@section scripts{
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
}

@if (!Model.IsFromAnonymous) 
{ Html.RenderAction("ToolbarUser", "Home"); }

<p>
    <br />
    Tänk på att skriven text lättare kan misstolkas än när man talar. Skriv ingenting som kan tolkas kränkande.
    <br />
    @using (Html.BeginForm())
    {
        @Html.ValidationSummary(true)
        @Html.AntiForgeryToken()
        <fieldset>
            <legend>Skicka meddelande</legend>
            @if (!Model.IsFromAnonymous)
            {
                <img class="right-float-big-picture" src="@Url.Action("MainPictureDataFor", "Picture", new { surveyId = Model.ToSurveyId })" />
            }
            else
            {
                <img src="/Content/images/ja/logo.png" height="100" style="float: right;" />
            }


            <div class="editor-label">
            </div>
            <div class="editor-field">
                @Html.HiddenFor(model => model.MessageId)
                @Html.HiddenFor(model => model.FromSurveyId)
                @Html.HiddenFor(model => model.ToSurveyId)
                @if (Model.IsFromDisabled)
                {
                    @Model.FromName.GetBeginning(StringLength.Short)
                }
                else
                {
                    @Html.ActionLink(Model.FromName.GetBeginning(StringLength.Short), "ShortDetails", "Survey", new { surveyId = Model.FromSurveyId }, new { title = "Från" })
                }
                <span><i class="fa fa-long-arrow-right"></i></span>
                @if (Model.IsToDisabled)
                {
                    @Model.ToName.GetBeginning(StringLength.Short)
                }
                else
                {
                    @Html.ActionLink(Model.ToName.GetBeginning(StringLength.Short), "ShortDetails", "Survey", new { surveyId = Model.ToSurveyId }, new { title = "Till" })
                }
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Body)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.Body, new { rows = "8", cols = "50" })<br />
                @Html.ValidationMessageFor(model => model.Body)
            </div>

            <div>
                <br />
                <button type="submit">
                    Skicka <i class="fa fa-send"></i>
                </button>
               
            </div>
        </fieldset>
    }
</p>