@using JAM.App_GlobalResources
@using JAM.Logic
@using JAM.Core.Models
@model Survey
@section scripts {
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
}
<div>
    @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.ValidationSummary(true)
        <fieldset>
            <legend>@Global.Signup_Title</legend>
            <img src="/content/images/holdinghands.jpg" alt="" width="400" align="right" />
            <div class="editor-label">
                @Html.LabelFor(model => model.Name, @Global.Signup_Name)
            </div>
            <div class="editor-label">
                @Html.TextBoxFor(model => model.Name, new { autofocus = "" })
                @Html.ValidationMessageFor(model => model.Name)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Street, @Global.Signup_Street)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.Street)
                @Html.ValidationMessageFor(model => model.Street)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.PostalCode, @Global.Signup_PostalCode)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.PostalCode)
                @Html.ValidationMessageFor(model => model.PostalCode)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.City, @Global.Signup_City)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.City)
                @Html.ValidationMessageFor(model => model.City)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Country, @Global.Signup_Country)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.Country)
                @Html.ValidationMessageFor(model => model.Country)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Email, @Global.Signup_Email)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.Email)
                @Html.ValidationMessageFor(model => model.Email)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Phone, @Global.Signup_Phone)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.Phone)
                @Html.ValidationMessageFor(model => model.Phone)
            </div>
        </fieldset>
        <!-- *************************************************************** -->
        <fieldset>
            <legend>Info</legend>
            <div class="editor-label">
                @Html.LabelFor(model => model.Birth, @Global.Signup_Birthday)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Birth)
                @Html.ValidationMessageFor(model => model.Birth)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.IsMale, @Global.Signup_Sex)
                @Html.RadioButtonFor(model => model.IsMale, true)
                @Html.LabelFor(model => model.IsMale, @Global.Signup_Sex2)
                @Html.RadioButtonFor(model => model.IsMale, false)
                @Html.ValidationMessageFor(model => model.IsMale)
            </div>
            
            <!-- ******************************************************************************************** -->
        </fieldset>
        if (Request.IsAuthenticated)
        {
        <fieldset>
            <legend>Längd/Vikt</legend>
            <div class="editor-label">
                @Html.LabelFor(model => model.Height)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Height) cm
                @Html.ValidationMessageFor(model => model.Height)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Weight)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Weight) kg
                @Html.ValidationMessageFor(model => model.Weight)
            </div>
        </fieldset>
        <fieldset>
            <legend>Etniskt tillhörighet</legend>
            <!-- ******************************************************************************************** -->
            <div class="editor-label">
                @Html.LabelFor(model => model.MotherLanguage)
                @Html.EditorFor(model => model.MotherLanguage)
                @Html.ValidationMessageFor(model => model.MotherLanguage)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsEthnicNorthEuropean)
                @Html.LabelFor(model => model.IsEthnicNorthEuropean)
                @Html.ValidationMessageFor(model => model.IsEthnicNorthEuropean)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsEthnicLatin)
                @Html.LabelFor(model => model.IsEthnicLatin)
                @Html.ValidationMessageFor(model => model.IsEthnicLatin)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsEthnicMulat)
                @Html.LabelFor(model => model.IsEthnicMulat)
                @Html.ValidationMessageFor(model => model.IsEthnicMulat)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsEthnicDark)
                @Html.LabelFor(model => model.IsEthnicDark)
                @Html.ValidationMessageFor(model => model.IsEthnicDark)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsEthnicAsian)
                @Html.LabelFor(model => model.IsEthnicAsian)
                @Html.ValidationMessageFor(model => model.IsEthnicAsian)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsEthnicCaucasic)
                @Html.LabelFor(model => model.IsEthnicCaucasic)
                @Html.ValidationMessageFor(model => model.IsEthnicCaucasic)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsEthnicMiddleEastern)
                @Html.LabelFor(model => model.IsEthnicMiddleEastern)
                @Html.ValidationMessageFor(model => model.IsEthnicMiddleEastern)
            </div>
            <!-- ******************************************************************************************** -->
        </fieldset>
        <fieldset>
            <legend>Civilstånd</legend>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsSingle)
                @Html.LabelFor(model => model.IsSingle)
                @Html.ValidationMessageFor(model => model.IsSingle)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsSeparated)
                @Html.LabelFor(model => model.IsSeparated)
                @Html.ValidationMessageFor(model => model.IsSeparated)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsDivorced)
                @Html.LabelFor(model => model.IsDivorced)
                @Html.ValidationMessageFor(model => model.IsDivorced)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsWidowed)
                @Html.LabelFor(model => model.IsWidowed)
                @Html.ValidationMessageFor(model => model.IsWidowed)
            </div>
        </fieldset>
        <fieldset>
            <legend>Bor</legend>
            <div class="editor-label">
                @Html.EditorFor(model => model.LivingAloneWithVisitors)
                @Html.LabelFor(model => model.LivingAloneWithVisitors)
                @Html.ValidationMessageFor(model => model.LivingAloneWithVisitors)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.LivingAlone)
                @Html.LabelFor(model => model.LivingAlone)
                @Html.ValidationMessageFor(model => model.LivingAlone)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.LivingWithPets)
                @Html.LabelFor(model => model.LivingWithPets)
                @Html.ValidationMessageFor(model => model.LivingWithPets)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.LivingWithKids)
                @Html.LabelFor(model => model.LivingWithKids)
                @Html.ValidationMessageFor(model => model.LivingWithKids)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.LivingWithParents)
                @Html.LabelFor(model => model.LivingWithParents)
                @Html.ValidationMessageFor(model => model.LivingWithParents)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.LivingWithFriends)
                @Html.LabelFor(model => model.LivingWithFriends)
                @Html.ValidationMessageFor(model => model.LivingWithFriends)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.LivingWithPartTimeKids)
                @Html.LabelFor(model => model.LivingWithPartTimeKids)
                @Html.ValidationMessageFor(model => model.LivingWithPartTimeKids)
            </div>
        </fieldset>

        <fieldset>
            <legend>Barn</legend>
            <div class="editor-label">
                @Html.LabelFor(model => model.KidsCountId)
                @Html.DropDownList("KidsCountId")
                @Html.ValidationMessageFor(model => model.KidsCountId)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.KidsWantedCountId)
                @Html.DropDownList("KidsWantedCountId")
                @Html.ValidationMessageFor(model => model.KidsWantedCountId)
            </div>
        </fieldset>
        <fieldset>
            <legend>Kroppstyp</legend>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsBodySlim)
                @Html.LabelFor(model => model.IsBodySlim)
                @Html.ValidationMessageFor(model => model.IsBodySlim)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsBodyAverage)
                @Html.LabelFor(model => model.IsBodyAverage)
                @Html.ValidationMessageFor(model => model.IsBodyAverage)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsBodyAthletic)
                @Html.LabelFor(model => model.IsBodyAthletic)
                @Html.ValidationMessageFor(model => model.IsBodyAthletic)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsBodyHeavy)
                @Html.LabelFor(model => model.IsBodyHeavy)
                @Html.ValidationMessageFor(model => model.IsBodyHeavy)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsBodyChubby)
                @Html.LabelFor(model => model.IsBodyChubby)
                @Html.ValidationMessageFor(model => model.IsBodyChubby)
            </div>
            <!-- ******************************************************************************************** -->
        </fieldset>

        <fieldset>
            <legend>Hår</legend>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHairBlond)
                @Html.LabelFor(model => model.IsHairBlond)
                @Html.ValidationMessageFor(model => model.IsHairBlond)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHairRed)
                @Html.LabelFor(model => model.IsHairRed)
                @Html.ValidationMessageFor(model => model.IsHairRed)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHairBrown)
                @Html.LabelFor(model => model.IsHairBrown)
                @Html.ValidationMessageFor(model => model.IsHairBrown)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHairGrey)
                @Html.LabelFor(model => model.IsHairGrey)
                @Html.ValidationMessageFor(model => model.IsHairGrey)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHairBlack)
                @Html.LabelFor(model => model.IsHairBlack)
                @Html.ValidationMessageFor(model => model.IsHairBlack)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHairBald)
                @Html.LabelFor(model => model.IsHairBald)
                @Html.ValidationMessageFor(model => model.IsHairBald)
            </div>
            <!-- ******************************************************************************************** -->
        </fieldset>

        <fieldset>
            <legend>Hårlängd</legend>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHairLengthShaved)
                @Html.LabelFor(model => model.IsHairLengthShaved)
                @Html.ValidationMessageFor(model => model.IsHairLengthShaved)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHairLengthVeryShort)
                @Html.LabelFor(model => model.IsHairLengthVeryShort)
                @Html.ValidationMessageFor(model => model.IsHairLengthVeryShort)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHairLengthShort)
                @Html.LabelFor(model => model.IsHairLengthShort)
                @Html.ValidationMessageFor(model => model.IsHairLengthShort)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHairLengthShoulder)
                @Html.LabelFor(model => model.IsHairLengthShoulder)
                @Html.ValidationMessageFor(model => model.IsHairLengthShoulder)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHairLengthLong)
                @Html.LabelFor(model => model.IsHairLengthLong)
                @Html.ValidationMessageFor(model => model.IsHairLengthLong)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHairLengthVeryLong)
                @Html.LabelFor(model => model.IsHairLengthVeryLong)
                @Html.ValidationMessageFor(model => model.IsHairLengthVeryLong)
            </div>
            <!-- ******************************************************************************************** -->
        </fieldset>
        <fieldset>
            <legend>Ögon</legend>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsEyesBlue)
                @Html.LabelFor(model => model.IsEyesBlue)
                @Html.ValidationMessageFor(model => model.IsEyesBlue)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsEyesBrown)
                @Html.LabelFor(model => model.IsEyesBrown)
                @Html.ValidationMessageFor(model => model.IsEyesBrown)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsEyesGrey)
                @Html.LabelFor(model => model.IsEyesGrey)
                @Html.ValidationMessageFor(model => model.IsEyesGrey)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsEyesGreen)
                @Html.LabelFor(model => model.IsEyesGreen)
                @Html.ValidationMessageFor(model => model.IsEyesGreen)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsEyesMix)
                @Html.LabelFor(model => model.IsEyesMix)
                @Html.ValidationMessageFor(model => model.IsEyesMix)
            </div>
            <!-- ******************************************************************************************** -->
        </fieldset>

        <fieldset>
            <legend>Yrke</legend>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsProfNot)
                @Html.LabelFor(model => model.IsProfNot)
                @Html.ValidationMessageFor(model => model.IsProfNot)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsProfAdmin)
                @Html.LabelFor(model => model.IsProfAdmin)
                @Html.ValidationMessageFor(model => model.IsProfAdmin)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsProfArtist)
                @Html.LabelFor(model => model.IsProfArtist)
                @Html.ValidationMessageFor(model => model.IsProfArtist)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsProfConstruction)
                @Html.LabelFor(model => model.IsProfConstruction)
                @Html.ValidationMessageFor(model => model.IsProfConstruction)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsProfHr)
                @Html.LabelFor(model => model.IsProfHr)
                @Html.ValidationMessageFor(model => model.IsProfHr)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsProfIt)
                @Html.LabelFor(model => model.IsProfIt)
                @Html.ValidationMessageFor(model => model.IsProfIt)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsProfDetail)
                @Html.LabelFor(model => model.IsProfDetail)
                @Html.ValidationMessageFor(model => model.IsProfDetail)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsProfSelf)
                @Html.LabelFor(model => model.IsProfSelf)
                @Html.ValidationMessageFor(model => model.IsProfSelf)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsProfFinance)
                @Html.LabelFor(model => model.IsProfFinance)
                @Html.ValidationMessageFor(model => model.IsProfFinance)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsProfSales)
                @Html.LabelFor(model => model.IsProfSales)
                @Html.ValidationMessageFor(model => model.IsProfSales)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsProfHealth)
                @Html.LabelFor(model => model.IsProfHealth)
                @Html.ValidationMessageFor(model => model.IsProfHealth)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsProfHotel)
                @Html.LabelFor(model => model.IsProfHotel)
                @Html.ValidationMessageFor(model => model.IsProfHotel)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsProfLaw)
                @Html.LabelFor(model => model.IsProfLaw)
                @Html.ValidationMessageFor(model => model.IsProfLaw)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsProfAdvertising)
                @Html.LabelFor(model => model.IsProfAdvertising)
                @Html.ValidationMessageFor(model => model.IsProfAdvertising)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsProfState)
                @Html.LabelFor(model => model.IsProfState)
                @Html.ValidationMessageFor(model => model.IsProfState)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsProfEducation)
                @Html.LabelFor(model => model.IsProfEducation)
                @Html.ValidationMessageFor(model => model.IsProfEducation)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsProfRetired)
                @Html.LabelFor(model => model.IsProfRetired)
                @Html.ValidationMessageFor(model => model.IsProfRetired)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsProfStudent)
                @Html.LabelFor(model => model.IsProfStudent)
                @Html.ValidationMessageFor(model => model.IsProfStudent)
            </div>
        </fieldset>

        <fieldset>
            <legend>Utbildning</legend>
            <!-- ******************************************************************************************** -->
            <div class="editor-label">
                @Html.EditorFor(model => model.IsEduBasic)
                @Html.LabelFor(model => model.IsEduBasic)
                @Html.ValidationMessageFor(model => model.IsEduBasic)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsEduCollage)
                @Html.LabelFor(model => model.IsEduCollage)
                @Html.ValidationMessageFor(model => model.IsEduCollage)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsEduUniversity)
                @Html.LabelFor(model => model.IsEduUniversity)
                @Html.ValidationMessageFor(model => model.IsEduUniversity)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsEduKand)
                @Html.LabelFor(model => model.IsEduKand)
                @Html.ValidationMessageFor(model => model.IsEduKand)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsEduMag)
                @Html.LabelFor(model => model.IsEduMag)
                @Html.ValidationMessageFor(model => model.IsEduMag)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsEduDoc)
                @Html.LabelFor(model => model.IsEduDoc)
                @Html.ValidationMessageFor(model => model.IsEduDoc)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsEduLife)
                @Html.LabelFor(model => model.IsEduLife)
                @Html.ValidationMessageFor(model => model.IsEduLife)
            </div>
        </fieldset>

        <fieldset>
            <legend>Personlighet</legend>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPersonAdventurous)
                @Html.LabelFor(model => model.IsPersonAdventurous)
                @Html.ValidationMessageFor(model => model.IsPersonAdventurous)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPersonCarefree)
                @Html.LabelFor(model => model.IsPersonCarefree)
                @Html.ValidationMessageFor(model => model.IsPersonCarefree)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPersonShy)
                @Html.LabelFor(model => model.IsPersonShy)
                @Html.ValidationMessageFor(model => model.IsPersonShy)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPersonDominant)
                @Html.LabelFor(model => model.IsPersonDominant)
                @Html.ValidationMessageFor(model => model.IsPersonDominant)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPersonLoner)
                @Html.LabelFor(model => model.IsPersonLoner)
                @Html.ValidationMessageFor(model => model.IsPersonLoner)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPersonStubborn)
                @Html.LabelFor(model => model.IsPersonStubborn)
                @Html.ValidationMessageFor(model => model.IsPersonStubborn)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPersonGenerous)
                @Html.LabelFor(model => model.IsPersonGenerous)
                @Html.ValidationMessageFor(model => model.IsPersonGenerous)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPersonHappy)
                @Html.LabelFor(model => model.IsPersonHappy)
                @Html.ValidationMessageFor(model => model.IsPersonHappy)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPersonHomorous)
                @Html.LabelFor(model => model.IsPersonHomorous)
                @Html.ValidationMessageFor(model => model.IsPersonHomorous)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPersonSensitive)
                @Html.LabelFor(model => model.IsPersonSensitive)
                @Html.ValidationMessageFor(model => model.IsPersonSensitive)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPersonAmbitious)
                @Html.LabelFor(model => model.IsPersonAmbitious)
                @Html.ValidationMessageFor(model => model.IsPersonAmbitious)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPersonAnalytic)
                @Html.LabelFor(model => model.IsPersonAnalytic)
                @Html.ValidationMessageFor(model => model.IsPersonAnalytic)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPersonTemper)
                @Html.LabelFor(model => model.IsPersonTemper)
                @Html.ValidationMessageFor(model => model.IsPersonTemper)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPersonLivly)
                @Html.LabelFor(model => model.IsPersonLivly)
                @Html.ValidationMessageFor(model => model.IsPersonLivly)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPersonCalm)
                @Html.LabelFor(model => model.IsPersonCalm)
                @Html.ValidationMessageFor(model => model.IsPersonCalm)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPersonRestless)
                @Html.LabelFor(model => model.IsPersonRestless)
                @Html.ValidationMessageFor(model => model.IsPersonRestless)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPersonConsidering)
                @Html.LabelFor(model => model.IsPersonConsidering)
                @Html.ValidationMessageFor(model => model.IsPersonConsidering)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPersonReserved)
                @Html.LabelFor(model => model.IsPersonReserved)
                @Html.ValidationMessageFor(model => model.IsPersonReserved)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPersonSocial)
                @Html.LabelFor(model => model.IsPersonSocial)
                @Html.ValidationMessageFor(model => model.IsPersonSocial)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPersonSpantanious)
                @Html.LabelFor(model => model.IsPersonSpantanious)
                @Html.ValidationMessageFor(model => model.IsPersonSpantanious)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPersonCaring)
                @Html.LabelFor(model => model.IsPersonCaring)
                @Html.ValidationMessageFor(model => model.IsPersonCaring)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPersonInspiring)
                @Html.LabelFor(model => model.IsPersonInspiring)
                @Html.ValidationMessageFor(model => model.IsPersonInspiring)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPersonSafe)
                @Html.LabelFor(model => model.IsPersonSafe)
                @Html.ValidationMessageFor(model => model.IsPersonSafe)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPersonStructured)
                @Html.LabelFor(model => model.IsPersonStructured)
                @Html.ValidationMessageFor(model => model.IsPersonStructured)
            </div>
        </fieldset>
        <fieldset>
            <legend>Träning</legend>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsExcerNot)
                @Html.LabelFor(model => model.IsExcerNot)
                @Html.ValidationMessageFor(model => model.IsExcerNot)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsExcerSome)
                @Html.LabelFor(model => model.IsExcerSome)
                @Html.ValidationMessageFor(model => model.IsExcerSome)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsExcerRegular)
                @Html.LabelFor(model => model.IsExcerRegular)
                @Html.ValidationMessageFor(model => model.IsExcerRegular)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsExcerAlways)
                @Html.LabelFor(model => model.IsExcerAlways)
                @Html.ValidationMessageFor(model => model.IsExcerAlways)
            </div>
        </fieldset>

        <fieldset>
            <legend>Religion</legend>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsRelAdventist)
                @Html.LabelFor(model => model.IsRelAdventist)
                @Html.ValidationMessageFor(model => model.IsRelAdventist)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsRelAgnostic)
                @Html.LabelFor(model => model.IsRelAgnostic)
                @Html.ValidationMessageFor(model => model.IsRelAgnostic)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsRelSpiritual)
                @Html.LabelFor(model => model.IsRelSpiritual)
                @Html.ValidationMessageFor(model => model.IsRelSpiritual)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsRelAnglican)
                @Html.LabelFor(model => model.IsRelAnglican)
                @Html.ValidationMessageFor(model => model.IsRelAnglican)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsRelAtheist)
                @Html.LabelFor(model => model.IsRelAtheist)
                @Html.ValidationMessageFor(model => model.IsRelAtheist)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsRelBaptist)
                @Html.LabelFor(model => model.IsRelBaptist)
                @Html.ValidationMessageFor(model => model.IsRelBaptist)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsRelHindu)
                @Html.LabelFor(model => model.IsRelHindu)
                @Html.ValidationMessageFor(model => model.IsRelHindu)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsRelBuddhist)
                @Html.LabelFor(model => model.IsRelBuddhist)
                @Html.ValidationMessageFor(model => model.IsRelBuddhist)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsRelJewish)
                @Html.LabelFor(model => model.IsRelJewish)
                @Html.ValidationMessageFor(model => model.IsRelJewish)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsRelCatholic)
                @Html.LabelFor(model => model.IsRelCatholic)
                @Html.ValidationMessageFor(model => model.IsRelCatholic)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsRelChistian)
                @Html.LabelFor(model => model.IsRelChistian)
                @Html.ValidationMessageFor(model => model.IsRelChistian)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsRelMethodist)
                @Html.LabelFor(model => model.IsRelMethodist)
                @Html.ValidationMessageFor(model => model.IsRelMethodist)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsRelMormon)
                @Html.LabelFor(model => model.IsRelMormon)
                @Html.ValidationMessageFor(model => model.IsRelMormon)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsRelMuslim)
                @Html.LabelFor(model => model.IsRelMuslim)
                @Html.ValidationMessageFor(model => model.IsRelMuslim)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsRelOrtodox)
                @Html.LabelFor(model => model.IsRelOrtodox)
                @Html.ValidationMessageFor(model => model.IsRelOrtodox)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsRelPingst)
                @Html.LabelFor(model => model.IsRelPingst)
                @Html.ValidationMessageFor(model => model.IsRelPingst)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsRelProtestant)
                @Html.LabelFor(model => model.IsRelProtestant)
                @Html.ValidationMessageFor(model => model.IsRelProtestant)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsRelTao)
                @Html.LabelFor(model => model.IsRelTao)
                @Html.ValidationMessageFor(model => model.IsRelTao)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsRelOther)
                @Html.LabelFor(model => model.IsRelOther)
                @Html.ValidationMessageFor(model => model.IsRelOther)
            </div>
        </fieldset>

        <fieldset>
            <legend>Religionsutövning</legend>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsRelPracticing)
                @Html.LabelFor(model => model.IsRelPracticing)
                @Html.ValidationMessageFor(model => model.IsRelPracticing)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsRelSomewhat)
                @Html.LabelFor(model => model.IsRelSomewhat)
                @Html.ValidationMessageFor(model => model.IsRelSomewhat)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsRelNotPracticing)
                @Html.LabelFor(model => model.IsRelNotPracticing)
                @Html.ValidationMessageFor(model => model.IsRelNotPracticing)
            </div>
        </fieldset>

        <fieldset>
            <legend>Inkomst</legend>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsIncomeLess)
                @Html.LabelFor(model => model.IsIncomeLess)
                @Html.ValidationMessageFor(model => model.IsIncomeLess)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsIncome1)
                @Html.LabelFor(model => model.IsIncome1)
                @Html.ValidationMessageFor(model => model.IsIncome1)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsIncome2)
                @Html.LabelFor(model => model.IsIncome2)
                @Html.ValidationMessageFor(model => model.IsIncome2)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsIncome3)
                @Html.LabelFor(model => model.IsIncome3)
                @Html.ValidationMessageFor(model => model.IsIncome3)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsIncome4)
                @Html.LabelFor(model => model.IsIncome4)
                @Html.ValidationMessageFor(model => model.IsIncome4)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsIncome5)
                @Html.LabelFor(model => model.IsIncome5)
                @Html.ValidationMessageFor(model => model.IsIncome5)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsIncomeMore)
                @Html.LabelFor(model => model.IsIncomeMore)
                @Html.ValidationMessageFor(model => model.IsIncomeMore)
            </div>
            <!-- ******************************************************************************************** -->
        </fieldset>

        <fieldset>
            <legend>Tobaksvanor</legend>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsTobacQuitting)
                @Html.LabelFor(model => model.IsTobacQuitting)
                @Html.ValidationMessageFor(model => model.IsTobacQuitting)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsTobacCigar)
                @Html.LabelFor(model => model.IsTobacCigar)
                @Html.ValidationMessageFor(model => model.IsTobacCigar)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsTobacRegularly)
                @Html.LabelFor(model => model.IsTobacRegularly)
                @Html.ValidationMessageFor(model => model.IsTobacRegularly)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsTobacParty)
                @Html.LabelFor(model => model.IsTobacParty)
                @Html.ValidationMessageFor(model => model.IsTobacParty)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsTobacSnus)
                @Html.LabelFor(model => model.IsTobacSnus)
                @Html.ValidationMessageFor(model => model.IsTobacSnus)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsTobacNot)
                @Html.LabelFor(model => model.IsTobacNot)
                @Html.ValidationMessageFor(model => model.IsTobacNot)
            </div>
            <!-- ******************************************************************************************** -->
        </fieldset>

        <fieldset>
            <legend>Alkoholvanor</legend>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsAlcNot)
                @Html.LabelFor(model => model.IsAlcNot)
                @Html.ValidationMessageFor(model => model.IsAlcNot)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsAlcLittle)
                @Html.LabelFor(model => model.IsAlcLittle)
                @Html.ValidationMessageFor(model => model.IsAlcLittle)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsAlcSocially)
                @Html.LabelFor(model => model.IsAlcSocially)
                @Html.ValidationMessageFor(model => model.IsAlcSocially)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsAlcMuch)
                @Html.LabelFor(model => model.IsAlcMuch)
                @Html.ValidationMessageFor(model => model.IsAlcMuch)
            </div>
            <!-- ********************************************************************************************
                    -->
        </fieldset>

        <fieldset>
            <legend>Mest nöjd med</legend>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPleWiArms)
                @Html.LabelFor(model => model.IsPleWiArms)
                @Html.ValidationMessageFor(model => model.IsPleWiArms)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPleWiChest)
                @Html.LabelFor(model => model.IsPleWiChest)
                @Html.ValidationMessageFor(model => model.IsPleWiChest)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPleWiLegs)
                @Html.LabelFor(model => model.IsPleWiLegs)
                @Html.ValidationMessageFor(model => model.IsPleWiLegs)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPleWiFeet)
                @Html.LabelFor(model => model.IsPleWiFeet)
                @Html.ValidationMessageFor(model => model.IsPleWiFeet)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPleWiNeck)
                @Html.LabelFor(model => model.IsPleWiNeck)
                @Html.ValidationMessageFor(model => model.IsPleWiNeck)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPleWiHands)
                @Html.LabelFor(model => model.IsPleWiHands)
                @Html.ValidationMessageFor(model => model.IsPleWiHands)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPleWiHair)
                @Html.LabelFor(model => model.IsPleWiHair)
                @Html.ValidationMessageFor(model => model.IsPleWiHair)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPleWiSmile)
                @Html.LabelFor(model => model.IsPleWiSmile)
                @Html.ValidationMessageFor(model => model.IsPleWiSmile)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPleWiLips)
                @Html.LabelFor(model => model.IsPleWiLips)
                @Html.ValidationMessageFor(model => model.IsPleWiLips)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPleWiMuscles)
                @Html.LabelFor(model => model.IsPleWiMuscles)
                @Html.ValidationMessageFor(model => model.IsPleWiMuscles)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPleWiBelly)
                @Html.LabelFor(model => model.IsPleWiBelly)
                @Html.ValidationMessageFor(model => model.IsPleWiBelly)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPleWiEars)
                @Html.LabelFor(model => model.IsPleWiEars)
                @Html.ValidationMessageFor(model => model.IsPleWiEars)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPleWiEyes)
                @Html.LabelFor(model => model.IsPleWiEyes)
                @Html.ValidationMessageFor(model => model.IsPleWiEyes)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPleWiButt)
                @Html.LabelFor(model => model.IsPleWiButt)
                @Html.ValidationMessageFor(model => model.IsPleWiButt)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPleWiCalf)
                @Html.LabelFor(model => model.IsPleWiCalf)
                @Html.ValidationMessageFor(model => model.IsPleWiCalf)
            </div>
            <!-- ******************************************************************************************-->
        </fieldset>

        <fieldset>
            <legend>Klädstil</legend>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsDressBoheme)
                @Html.LabelFor(model => model.IsDressBoheme)
                @Html.ValidationMessageFor(model => model.IsDressBoheme)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsDressBusiness)
                @Html.LabelFor(model => model.IsDressBusiness)
                @Html.ValidationMessageFor(model => model.IsDressBusiness)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsDressEthnic)
                @Html.LabelFor(model => model.IsDressEthnic)
                @Html.ValidationMessageFor(model => model.IsDressEthnic)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsDressClassic)
                @Html.LabelFor(model => model.IsDressClassic)
                @Html.ValidationMessageFor(model => model.IsDressClassic)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsDressFashion)
                @Html.LabelFor(model => model.IsDressFashion)
                @Html.ValidationMessageFor(model => model.IsDressFashion)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsDressRock)
                @Html.LabelFor(model => model.IsDressRock)
                @Html.ValidationMessageFor(model => model.IsDressRock)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsDressSophisticated)
                @Html.LabelFor(model => model.IsDressSophisticated)
                @Html.ValidationMessageFor(model => model.IsDressSophisticated)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsDressSport)
                @Html.LabelFor(model => model.IsDressSport)
                @Html.ValidationMessageFor(model => model.IsDressSport)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsDressTrend)
                @Html.LabelFor(model => model.IsDressTrend)
                @Html.ValidationMessageFor(model => model.IsDressTrend)
            </div>
            <!-- *******************************************************************************************-->
        </fieldset>

        <fieldset>
            <legend>Kroppsdekorationer</legend>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsBodyArtNever)
                @Html.LabelFor(model => model.IsBodyArtNever)
                @Html.ValidationMessageFor(model => model.IsBodyArtNever)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsBodyArtVisible)
                @Html.LabelFor(model => model.IsBodyArtVisible)
                @Html.ValidationMessageFor(model => model.IsBodyArtVisible)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsBodyArtHidden)
                @Html.LabelFor(model => model.IsBodyArtHidden)
                @Html.ValidationMessageFor(model => model.IsBodyArtHidden)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsBodyArtPiercing)
                @Html.LabelFor(model => model.IsBodyArtPiercing)
                @Html.ValidationMessageFor(model => model.IsBodyArtPiercing)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsBodyArtAsk)
                @Html.LabelFor(model => model.IsBodyArtAsk)
                @Html.ValidationMessageFor(model => model.IsBodyArtAsk)
            </div>
        </fieldset>

        <fieldset>
            <legend>Romantik</legend>
            <!-- ******************************************************************************************** -->
            <div class="editor-label">
                @Html.EditorFor(model => model.IsRomanticVery)
                @Html.LabelFor(model => model.IsRomanticVery)
                @Html.ValidationMessageFor(model => model.IsRomanticVery)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsRomantic)
                @Html.LabelFor(model => model.IsRomantic)
                @Html.ValidationMessageFor(model => model.IsRomantic)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsRomanticLittle)
                @Html.LabelFor(model => model.IsRomanticLittle)
                @Html.ValidationMessageFor(model => model.IsRomanticLittle)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsRomanticNot)
                @Html.LabelFor(model => model.IsRomanticNot)
                @Html.ValidationMessageFor(model => model.IsRomanticNot)
            </div>
            <!-- ******************************************************************************************** -->
        </fieldset>

        <fieldset>
            <legend>Syn på äktenskap</legend>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMarriageHoly)
                @Html.LabelFor(model => model.IsMarriageHoly)
                @Html.ValidationMessageFor(model => model.IsMarriageHoly)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMarriageVeryImportant)
                @Html.LabelFor(model => model.IsMarriageVeryImportant)
                @Html.ValidationMessageFor(model => model.IsMarriageVeryImportant)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMarriageImportant)
                @Html.LabelFor(model => model.IsMarriageImportant)
                @Html.ValidationMessageFor(model => model.IsMarriageImportant)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMarriageLessImportant)
                @Html.LabelFor(model => model.IsMarriageLessImportant)
                @Html.ValidationMessageFor(model => model.IsMarriageLessImportant)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMarriageUnImportant)
                @Html.LabelFor(model => model.IsMarriageUnImportant)
                @Html.ValidationMessageFor(model => model.IsMarriageUnImportant)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMarriageNotAgain)
                @Html.LabelFor(model => model.IsMarriageNotAgain)
                @Html.ValidationMessageFor(model => model.IsMarriageNotAgain)
            </div>
            <!-- ******************************************************************************************** -->
        </fieldset>

        <fieldset>
            <legend>Politisk ståndpunkt</legend>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPoliticVeryConservative)
                @Html.LabelFor(model => model.IsPoliticVeryConservative)
                @Html.ValidationMessageFor(model => model.IsPoliticVeryConservative)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPoliticConservative)
                @Html.LabelFor(model => model.IsPoliticConservative)
                @Html.ValidationMessageFor(model => model.IsPoliticConservative)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPoliticMiddle)
                @Html.LabelFor(model => model.IsPoliticMiddle)
                @Html.ValidationMessageFor(model => model.IsPoliticMiddle)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPoliticLiberal)
                @Html.LabelFor(model => model.IsPoliticLiberal)
                @Html.ValidationMessageFor(model => model.IsPoliticLiberal)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPoliticVeryLiberal)
                @Html.LabelFor(model => model.IsPoliticVeryLiberal)
                @Html.ValidationMessageFor(model => model.IsPoliticVeryLiberal)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPoliticNonConformist)
                @Html.LabelFor(model => model.IsPoliticNonConformist)
                @Html.ValidationMessageFor(model => model.IsPoliticNonConformist)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsPoliticOther)
                @Html.LabelFor(model => model.IsPoliticOther)
                @Html.ValidationMessageFor(model => model.IsPoliticOther)
            </div>
            <!-- ******************************************************************************************** -->
        </fieldset>

        <fieldset>
            <legend>Favoritmusik</legend>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMusicNewAge)
                @Html.LabelFor(model => model.IsMusicNewAge)
                @Html.ValidationMessageFor(model => model.IsMusicNewAge)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMusicBlues)
                @Html.LabelFor(model => model.IsMusicBlues)
                @Html.ValidationMessageFor(model => model.IsMusicBlues)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMusicCountry)
                @Html.LabelFor(model => model.IsMusicCountry)
                @Html.ValidationMessageFor(model => model.IsMusicCountry)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMusicHits)
                @Html.LabelFor(model => model.IsMusicHits)
                @Html.ValidationMessageFor(model => model.IsMusicHits)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMusicDisco)
                @Html.LabelFor(model => model.IsMusicDisco)
                @Html.ValidationMessageFor(model => model.IsMusicDisco)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMusicElectronica)
                @Html.LabelFor(model => model.IsMusicElectronica)
                @Html.ValidationMessageFor(model => model.IsMusicElectronica)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMusicEthnic)
                @Html.LabelFor(model => model.IsMusicEthnic)
                @Html.ValidationMessageFor(model => model.IsMusicEthnic)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMusicFilm)
                @Html.LabelFor(model => model.IsMusicFilm)
                @Html.ValidationMessageFor(model => model.IsMusicFilm)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMusicFolk)
                @Html.LabelFor(model => model.IsMusicFolk)
                @Html.ValidationMessageFor(model => model.IsMusicFolk)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMusicFunk)
                @Html.LabelFor(model => model.IsMusicFunk)
                @Html.ValidationMessageFor(model => model.IsMusicFunk)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMusicGospel)
                @Html.LabelFor(model => model.IsMusicGospel)
                @Html.ValidationMessageFor(model => model.IsMusicGospel)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMusicMetal)
                @Html.LabelFor(model => model.IsMusicMetal)
                @Html.ValidationMessageFor(model => model.IsMusicMetal)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMusicHipHop)
                @Html.LabelFor(model => model.IsMusicHipHop)
                @Html.ValidationMessageFor(model => model.IsMusicHipHop)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMusicJazz)
                @Html.LabelFor(model => model.IsMusicJazz)
                @Html.ValidationMessageFor(model => model.IsMusicJazz)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMusicClassic)
                @Html.LabelFor(model => model.IsMusicClassic)
                @Html.ValidationMessageFor(model => model.IsMusicClassic)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMusicLatin)
                @Html.LabelFor(model => model.IsMusicLatin)
                @Html.ValidationMessageFor(model => model.IsMusicLatin)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMusicMusical)
                @Html.LabelFor(model => model.IsMusicMusical)
                @Html.ValidationMessageFor(model => model.IsMusicMusical)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMusicOpera)
                @Html.LabelFor(model => model.IsMusicOpera)
                @Html.ValidationMessageFor(model => model.IsMusicOpera)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMusicPop)
                @Html.LabelFor(model => model.IsMusicPop)
                @Html.ValidationMessageFor(model => model.IsMusicPop)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMusicRnB)
                @Html.LabelFor(model => model.IsMusicRnB)
                @Html.ValidationMessageFor(model => model.IsMusicRnB)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMusicRock)
                @Html.LabelFor(model => model.IsMusicRock)
                @Html.ValidationMessageFor(model => model.IsMusicRock)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMusicReggae)
                @Html.LabelFor(model => model.IsMusicReggae)
                @Html.ValidationMessageFor(model => model.IsMusicReggae)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMusicSoul)
                @Html.LabelFor(model => model.IsMusicSoul)
                @Html.ValidationMessageFor(model => model.IsMusicSoul)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMusicSynth)
                @Html.LabelFor(model => model.IsMusicSynth)
                @Html.ValidationMessageFor(model => model.IsMusicSynth)
            </div>
            <!-- ******************************************************************************************** -->
        </fieldset>

        <fieldset>
            <legend>Favoritfilmer</legend>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMovieAction)
                @Html.LabelFor(model => model.IsMovieAction)
                @Html.ValidationMessageFor(model => model.IsMovieAction)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMovieAnimation)
                @Html.LabelFor(model => model.IsMovieAnimation)
                @Html.ValidationMessageFor(model => model.IsMovieAnimation)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMovieAdventure)
                @Html.LabelFor(model => model.IsMovieAdventure)
                @Html.ValidationMessageFor(model => model.IsMovieAdventure)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMovieDocumentary)
                @Html.LabelFor(model => model.IsMovieDocumentary)
                @Html.ValidationMessageFor(model => model.IsMovieDocumentary)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMovieDrama)
                @Html.LabelFor(model => model.IsMovieDrama)
                @Html.ValidationMessageFor(model => model.IsMovieDrama)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMovieErotic)
                @Html.LabelFor(model => model.IsMovieErotic)
                @Html.ValidationMessageFor(model => model.IsMovieErotic)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMovieFantasy)
                @Html.LabelFor(model => model.IsMovieFantasy)
                @Html.ValidationMessageFor(model => model.IsMovieFantasy)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMovieHistoric)
                @Html.LabelFor(model => model.IsMovieHistoric)
                @Html.ValidationMessageFor(model => model.IsMovieHistoric)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMovieIndependent)
                @Html.LabelFor(model => model.IsMovieIndependent)
                @Html.ValidationMessageFor(model => model.IsMovieIndependent)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMovieComedy)
                @Html.LabelFor(model => model.IsMovieComedy)
                @Html.ValidationMessageFor(model => model.IsMovieComedy)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMovieShort)
                @Html.LabelFor(model => model.IsMovieShort)
                @Html.ValidationMessageFor(model => model.IsMovieShort)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMovieWar)
                @Html.LabelFor(model => model.IsMovieWar)
                @Html.ValidationMessageFor(model => model.IsMovieWar)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMovieCrime)
                @Html.LabelFor(model => model.IsMovieCrime)
                @Html.ValidationMessageFor(model => model.IsMovieCrime)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMovieManga)
                @Html.LabelFor(model => model.IsMovieManga)
                @Html.ValidationMessageFor(model => model.IsMovieManga)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMovieMusic)
                @Html.LabelFor(model => model.IsMovieMusic)
                @Html.ValidationMessageFor(model => model.IsMovieMusic)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMovieRomantic)
                @Html.LabelFor(model => model.IsMovieRomantic)
                @Html.ValidationMessageFor(model => model.IsMovieRomantic)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMovieThriller)
                @Html.LabelFor(model => model.IsMovieThriller)
                @Html.ValidationMessageFor(model => model.IsMovieThriller)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMovieSciFi)
                @Html.LabelFor(model => model.IsMovieSciFi)
                @Html.ValidationMessageFor(model => model.IsMovieSciFi)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMovieHorror)
                @Html.LabelFor(model => model.IsMovieHorror)
                @Html.ValidationMessageFor(model => model.IsMovieHorror)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMovieCartoon)
                @Html.LabelFor(model => model.IsMovieCartoon)
                @Html.ValidationMessageFor(model => model.IsMovieCartoon)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsMovieWestern)
                @Html.LabelFor(model => model.IsMovieWestern)
                @Html.ValidationMessageFor(model => model.IsMovieWestern)
            </div>
            <!-- ******************************************************************************************** -->
        </fieldset>

        <fieldset>
            <legend>Intressen</legend>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbyNewAge)
                @Html.LabelFor(model => model.IsHobbyNewAge)
                @Html.ValidationMessageFor(model => model.IsHobbyNewAge)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbyCars)
                @Html.LabelFor(model => model.IsHobbyCars)
                @Html.ValidationMessageFor(model => model.IsHobbyCars)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbyDance)
                @Html.LabelFor(model => model.IsHobbyDance)
                @Html.ValidationMessageFor(model => model.IsHobbyDance)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbyAnimals)
                @Html.LabelFor(model => model.IsHobbyAnimals)
                @Html.ValidationMessageFor(model => model.IsHobbyAnimals)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbyMovies)
                @Html.LabelFor(model => model.IsHobbyMovies)
                @Html.ValidationMessageFor(model => model.IsHobbyMovies)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbyHunting)
                @Html.LabelFor(model => model.IsHobbyHunting)
                @Html.ValidationMessageFor(model => model.IsHobbyHunting)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbyInterior)
                @Html.LabelFor(model => model.IsHobbyInterior)
                @Html.ValidationMessageFor(model => model.IsHobbyInterior)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbyPhoto)
                @Html.LabelFor(model => model.IsHobbyPhoto)
                @Html.ValidationMessageFor(model => model.IsHobbyPhoto)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbyOutdoors)
                @Html.LabelFor(model => model.IsHobbyOutdoors)
                @Html.ValidationMessageFor(model => model.IsHobbyOutdoors)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbyArt)
                @Html.LabelFor(model => model.IsHobbyArt)
                @Html.ValidationMessageFor(model => model.IsHobbyArt)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbyGame)
                @Html.LabelFor(model => model.IsHobbyGame)
                @Html.ValidationMessageFor(model => model.IsHobbyGame)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbyCooking)
                @Html.LabelFor(model => model.IsHobbyCooking)
                @Html.ValidationMessageFor(model => model.IsHobbyCooking)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbyReading)
                @Html.LabelFor(model => model.IsHobbyReading)
                @Html.ValidationMessageFor(model => model.IsHobbyReading)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbyHistory)
                @Html.LabelFor(model => model.IsHobbyHistory)
                @Html.ValidationMessageFor(model => model.IsHobbyHistory)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbyPainting)
                @Html.LabelFor(model => model.IsHobbyPainting)
                @Html.ValidationMessageFor(model => model.IsHobbyPainting)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbyMuseum)
                @Html.LabelFor(model => model.IsHobbyMuseum)
                @Html.ValidationMessageFor(model => model.IsHobbyMuseum)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbyMusic)
                @Html.LabelFor(model => model.IsHobbyMusic)
                @Html.ValidationMessageFor(model => model.IsHobbyMusic)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbyPolitics)
                @Html.LabelFor(model => model.IsHobbyPolitics)
                @Html.ValidationMessageFor(model => model.IsHobbyPolitics)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbyTravel)
                @Html.LabelFor(model => model.IsHobbyTravel)
                @Html.ValidationMessageFor(model => model.IsHobbyTravel)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbyRolePlaying)
                @Html.LabelFor(model => model.IsHobbyRolePlaying)
                @Html.ValidationMessageFor(model => model.IsHobbyRolePlaying)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbyShopping)
                @Html.LabelFor(model => model.IsHobbyShopping)
                @Html.ValidationMessageFor(model => model.IsHobbyShopping)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbySinging)
                @Html.LabelFor(model => model.IsHobbySinging)
                @Html.ValidationMessageFor(model => model.IsHobbySinging)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbyWriting)
                @Html.LabelFor(model => model.IsHobbyWriting)
                @Html.ValidationMessageFor(model => model.IsHobbyWriting)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbyGaming)
                @Html.LabelFor(model => model.IsHobbyGaming)
                @Html.ValidationMessageFor(model => model.IsHobbyGaming)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbyWorkout)
                @Html.LabelFor(model => model.IsHobbyWorkout)
                @Html.ValidationMessageFor(model => model.IsHobbyWorkout)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbyDrama)
                @Html.LabelFor(model => model.IsHobbyDrama)
                @Html.ValidationMessageFor(model => model.IsHobbyDrama)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbyDrawing)
                @Html.LabelFor(model => model.IsHobbyDrawing)
                @Html.ValidationMessageFor(model => model.IsHobbyDrawing)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbyGardening)
                @Html.LabelFor(model => model.IsHobbyGardening)
                @Html.ValidationMessageFor(model => model.IsHobbyGardening)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbyTv)
                @Html.LabelFor(model => model.IsHobbyTv)
                @Html.ValidationMessageFor(model => model.IsHobbyTv)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbyCircles)
                @Html.LabelFor(model => model.IsHobbyCircles)
                @Html.ValidationMessageFor(model => model.IsHobbyCircles)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbyHiking)
                @Html.LabelFor(model => model.IsHobbyHiking)
                @Html.ValidationMessageFor(model => model.IsHobbyHiking)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsHobbyWine)
                @Html.LabelFor(model => model.IsHobbyWine)
                @Html.ValidationMessageFor(model => model.IsHobbyWine)
            </div>
            <!-- ******************************************************************************************** -->
        </fieldset>

        <fieldset>
            <legend>Hur ser en helg ut</legend>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsWeekendActive)
                @Html.LabelFor(model => model.IsWeekendActive)
                @Html.ValidationMessageFor(model => model.IsWeekendActive)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsWeekendChill)
                @Html.LabelFor(model => model.IsWeekendChill)
                @Html.ValidationMessageFor(model => model.IsWeekendChill)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsWeekendRandom)
                @Html.LabelFor(model => model.IsWeekendRandom)
                @Html.ValidationMessageFor(model => model.IsWeekendRandom)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsWeekendPlanned)
                @Html.LabelFor(model => model.IsWeekendPlanned)
                @Html.ValidationMessageFor(model => model.IsWeekendPlanned)
            </div>
            <!-- ******************************************************************************************** -->
        </fieldset>

        <fieldset>
            <legend>Idrottsintressen</legend>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsSportDance)
                @Html.LabelFor(model => model.IsSportDance)
                @Html.ValidationMessageFor(model => model.IsSportDance)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsSportBalls)
                @Html.LabelFor(model => model.IsSportBalls)
                @Html.ValidationMessageFor(model => model.IsSportBalls)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsSportMartial)
                @Html.LabelFor(model => model.IsSportMartial)
                @Html.ValidationMessageFor(model => model.IsSportMartial)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsSportFitness)
                @Html.LabelFor(model => model.IsSportFitness)
                @Html.ValidationMessageFor(model => model.IsSportFitness)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsSportAdventure)
                @Html.LabelFor(model => model.IsSportAdventure)
                @Html.ValidationMessageFor(model => model.IsSportAdventure)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsSportGolf)
                @Html.LabelFor(model => model.IsSportGolf)
                @Html.ValidationMessageFor(model => model.IsSportGolf)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsSportRunning)
                @Html.LabelFor(model => model.IsSportRunning)
                @Html.ValidationMessageFor(model => model.IsSportRunning)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsSportRiding)
                @Html.LabelFor(model => model.IsSportRiding)
                @Html.ValidationMessageFor(model => model.IsSportRiding)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsSportSailing)
                @Html.LabelFor(model => model.IsSportSailing)
                @Html.ValidationMessageFor(model => model.IsSportSailing)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsSportSkating)
                @Html.LabelFor(model => model.IsSportSkating)
                @Html.ValidationMessageFor(model => model.IsSportSkating)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsSportSurfing)
                @Html.LabelFor(model => model.IsSportSurfing)
                @Html.ValidationMessageFor(model => model.IsSportSurfing)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsSportYoga)
                @Html.LabelFor(model => model.IsSportYoga)
                @Html.ValidationMessageFor(model => model.IsSportYoga)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsSportRaquet)
                @Html.LabelFor(model => model.IsSportRaquet)
                @Html.ValidationMessageFor(model => model.IsSportRaquet)
            </div>
        </fieldset>

        <fieldset>
            <legend>Din favoritdejt</legend>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsDateBreakfast)
                @Html.LabelFor(model => model.IsDateBreakfast)
                @Html.ValidationMessageFor(model => model.IsDateBreakfast)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsDateLunch)
                @Html.LabelFor(model => model.IsDateLunch)
                @Html.ValidationMessageFor(model => model.IsDateLunch)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsDateDinner)
                @Html.LabelFor(model => model.IsDateDinner)
                @Html.ValidationMessageFor(model => model.IsDateDinner)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsDateMovie)
                @Html.LabelFor(model => model.IsDateMovie)
                @Html.ValidationMessageFor(model => model.IsDateMovie)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsDateBarSnack)
                @Html.LabelFor(model => model.IsDateBarSnack)
                @Html.ValidationMessageFor(model => model.IsDateBarSnack)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsDateDrinks)
                @Html.LabelFor(model => model.IsDateDrinks)
                @Html.ValidationMessageFor(model => model.IsDateDrinks)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsDatePicnic)
                @Html.LabelFor(model => model.IsDatePicnic)
                @Html.ValidationMessageFor(model => model.IsDatePicnic)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsDateDinnerHome)
                @Html.LabelFor(model => model.IsDateDinnerHome)
                @Html.ValidationMessageFor(model => model.IsDateDinnerHome)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsDateFika)
                @Html.LabelFor(model => model.IsDateFika)
                @Html.ValidationMessageFor(model => model.IsDateFika)
            </div>
            <!-- ******************************************************************************************** -->
        </fieldset>

        <fieldset>
            <legend>Vikten av utseende</legend>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsLooksImportant)
                @Html.LabelFor(model => model.IsLooksImportant)
                @Html.ValidationMessageFor(model => model.IsLooksImportant)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsLooksLessImportant)
                @Html.LabelFor(model => model.IsLooksLessImportant)
                @Html.ValidationMessageFor(model => model.IsLooksLessImportant)
            </div>
            <!-- ******************************************************************************************** -->
        </fieldset>

        <fieldset>
            <legend>Min syn på en kärleksrelation</legend>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsRelationTogether)
                @Html.LabelFor(model => model.IsRelationTogether)
                @Html.ValidationMessageFor(model => model.IsRelationTogether)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsRelationOwnTime)
                @Html.LabelFor(model => model.IsRelationOwnTime)
                @Html.ValidationMessageFor(model => model.IsRelationOwnTime)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsRelationMarriage)
                @Html.LabelFor(model => model.IsRelationMarriage)
                @Html.ValidationMessageFor(model => model.IsRelationMarriage)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsRelationLiving)
                @Html.LabelFor(model => model.IsRelationLiving)
                @Html.ValidationMessageFor(model => model.IsRelationLiving)
            </div>
            <div class="editor-label">
                @Html.EditorFor(model => model.IsRelationNotLiving)
                @Html.LabelFor(model => model.IsRelationNotLiving)
                @Html.ValidationMessageFor(model => model.IsRelationNotLiving)
            </div>
            <!-- ******************************************************************************************** -->
        </fieldset>

        <fieldset>
            <legend>Våra anteckningar</legend>
            <div class="editor-label">
                @Html.LabelFor(model => model.Note1)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Note1)
                @Html.ValidationMessageFor(model => model.Note1)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Note2)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Note2)
                @Html.ValidationMessageFor(model => model.Note2)
            </div>
        </fieldset>
        }
        

        if (Request.IsAuthenticated)
        {

        
        }
        <fieldset>
            <legend>Medlemskap</legend>
            <div class="editor-label">
                @Html.LabelFor(model => model.ReferrerId)
                @Html.DropDownList("ReferrerId")
                @Html.ValidationMessageFor(model => model.ReferrerId)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.DatePackageId)
                @Html.DropDownList("DatePackageId")
                @Html.ValidationMessageFor(model => model.DatePackageId)
            </div>
            <!-- ******************************************************************************************** -->
        </fieldset>
        <fieldset>
            <legend>@Global.Signup_Verify</legend>
            <div>
                @Global.Signup_Commitment
                <br />
                <input type="submit" value="Skicka in" />
            </div>
        </fieldset>
    }
</div>
